services:
  # Banco de dados PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: church_newsletter_db
    environment:
      POSTGRES_DB: church_newsletter
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./church-newsletter-backend/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - church_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d church_newsletter"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Node.js
  backend:
    build:
      context: ./church-newsletter-backend
      dockerfile: Dockerfile
    container_name: church_newsletter_backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: church_newsletter
      DB_USER: postgres
      DB_PASSWORD: postgres
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 24h
      CORS_ORIGIN: http://localhost
      UPLOAD_PATH: ./uploads
      MAX_FILE_SIZE: 5242880
    ports:
      - "3001:3001"
    volumes:
      - ./church-newsletter-backend/uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - church_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend React
  frontend:
    build:
      context: ./church-newsletter
      dockerfile: Dockerfile
    container_name: church_newsletter_frontend
    environment:
      - VITE_API_URL=http://localhost:3001/api
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - church_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  postgres_data:
    driver: local

networks:
  church_network:
    driver: bridge 